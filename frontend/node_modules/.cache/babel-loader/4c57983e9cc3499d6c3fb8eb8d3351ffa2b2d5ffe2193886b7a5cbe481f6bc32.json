{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bingoel\\\\Desktop\\\\Projects\\\\TennisApp\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_BASE_URL = 'http://localhost:8000';\n\n  // Fetch players data on component mount\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n  const fetchPlayers = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/players`);\n      setPlayers(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch players data. Make sure the backend is running.');\n      console.error('Error fetching players:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const incrementScore = async playerName => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/players/${playerName}/increment`);\n\n      // Update the players state with the new score\n      setPlayers(prevPlayers => prevPlayers.map(player => player.name === playerName ? {\n        ...player,\n        score: response.data.score\n      } : player));\n    } catch (err) {\n      setError(`Failed to increment score for ${playerName}`);\n      console.error('Error incrementing score:', err);\n    }\n  };\n  const resetScores = async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/players/reset`);\n      setPlayers(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to reset scores');\n      console.error('Error resetting scores:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tennis-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"\\uD83C\\uDFBE Tennis App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading players...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tennis-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"\\uD83C\\uDFBE Tennis App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-score\",\n            children: player.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"increment-btn\",\n          onClick: () => incrementScore(player.name),\n          children: \"+1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, player.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-btn\",\n      onClick: resetScores,\n      children: \"Reset All Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gI5IvuAkxLm+sIrB6oQgpFtvEsI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","players","setPlayers","loading","setLoading","error","setError","API_BASE_URL","fetchPlayers","response","get","data","err","console","incrementScore","playerName","post","prevPlayers","map","player","name","score","resetScores","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bingoel/Desktop/Projects/TennisApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [players, setPlayers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const API_BASE_URL = 'http://localhost:8000';\r\n\r\n  // Fetch players data on component mount\r\n  useEffect(() => {\r\n    fetchPlayers();\r\n  }, []);\r\n\r\n  const fetchPlayers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${API_BASE_URL}/players`);\r\n      setPlayers(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to fetch players data. Make sure the backend is running.');\r\n      console.error('Error fetching players:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const incrementScore = async (playerName) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/players/${playerName}/increment`);\r\n      \r\n      // Update the players state with the new score\r\n      setPlayers(prevPlayers => \r\n        prevPlayers.map(player => \r\n          player.name === playerName \r\n            ? { ...player, score: response.data.score }\r\n            : player\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError(`Failed to increment score for ${playerName}`);\r\n      console.error('Error incrementing score:', err);\r\n    }\r\n  };\r\n\r\n  const resetScores = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/players/reset`);\r\n      setPlayers(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to reset scores');\r\n      console.error('Error resetting scores:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"tennis-app\">\r\n        <h1 className=\"app-title\">ðŸŽ¾ Tennis App</h1>\r\n        <p className=\"loading\">Loading players...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"tennis-app\">\r\n      <h1 className=\"app-title\">ðŸŽ¾ Tennis App</h1>\r\n      \r\n      {error && (\r\n        <div className=\"error\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"players-container\">\r\n        {players.map((player) => (\r\n          <div key={player.name} className=\"player-card\">\r\n            <div className=\"player-info\">\r\n              <span className=\"player-name\">{player.name}</span>\r\n              <span className=\"player-score\">{player.score}</span>\r\n            </div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => incrementScore(player.name)}\r\n            >\r\n              +1\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button \r\n        className=\"reset-btn\"\r\n        onClick={resetScores}\r\n      >\r\n        Reset All Scores\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}